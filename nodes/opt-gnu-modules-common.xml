<?xml version="1.0" standalone="no"?>

<kickstart>

<description>
GNU
http://www.allinea.com
</description>

<copyright>
Copyright (c) 2000 - 2011 The Regents of the University of California.
All rights reserved. Rocks(r) v5.1 www.rocksclusters.org
</copyright>

<changelog>
</changelog>

<post>

  if test `grep -c /opt/modulefiles/applications /etc/profile.d/modules.csh` = 0; then
    echo 'setenv MODULEPATH /opt/modulefiles/applications:$MODULEPATH' >> \
         /etc/profile.d/modules.csh
    echo 'if ( -s ${HOME}/.modules ) then' >> /etc/profile.d/modules.csh
    echo 'source ${HOME}/.modules' >> /etc/profile.d/modules.csh
    echo 'endif' >> /etc/profile.d/modules.csh

  fi
  if test `grep -c /opt/modulefiles/applications /etc/profile.d/modules.sh` = 0; then
    echo 'export MODULEPATH=/opt/modulefiles/applications:$MODULEPATH' >> \
         /etc/profile.d/modules.sh
    echo 'if test -f ${HOME}/.modules; then' >> /etc/profile.d/modules.sh
    echo '. ${HOME}/.modules' >> /etc/profile.d/modules.sh
    echo 'fi' >> /etc/profile.d/modules.sh
  fi
  
  /bin/mkdir -m 0755 -p /opt/modulefiles/compilers/gnu


<file name="/opt/modulefiles/compilers/gnu/4.6.1" perms="0644">
#%Module1.0
module-whatis "GNU compilers"
module-whatis "Version: 4.6.1"
module-whatis "Description: GNU compilers"

# If unloading, also unload any gnu-dependent modules
if {[module-info mode switch1] || [module-info mode switch3]} {
  # Get the command line that invoked this process; unload only if switching
  # from gnu to another (compiler) module, e.g., "module switch gnu intel"
  set commandWords [split [exec /bin/ps -p [pid] -o args=] " "]
  set switchFrom [lindex [split [module-info name] "/"] 0]
  set switchTo [lindex [split [lindex $commandWords end] "/"] 0]
  set unloadApps [expr ! [string equal $switchTo $switchFrom]]
} elseif {[module-info mode remove]} {
  set unloadApps 1
} else {
  set unloadApps 0
}
if {$unloadApps &amp;&amp; [info exists env(LOADEDMODULES)]} {
  foreach app [split $env(LOADEDMODULES) ":"] {
    # Check whether any gnu-dependent module dir contains a module w/this name
    if {[llength [glob -nocomplain /opt/modulefiles/*/.gnu/$app]] > 0} {
      puts stderr "Unloading compiler-dependent module $app"
      module unload [lindex [split $app "/"] 0]
    }
  }
}

# Add all gnu-dependent module dirs to the search path
foreach path [glob -nocomplain /opt/modulefiles/*/.gnu] {
  prepend-path MODULEPATH $path
}
prepend-path PATH /opt/gnu/gcc/4.6.1/bin
prepend-path PATH /opt/gnu/gdb/7.4/bin
prepend-path LD_LIBRARY_PATH /opt/gnu/gcc/4.6.1/lib64
prepend-path LD_LIBRARY_PATH /opt/gnu/gmp/4.3.2/lib
prepend-path LD_LIBRARY_PATH /opt/gnu/mpfr/3.0.1/lib
prepend-path LD_LIBRARY_PATH /opt/gnu/mpc/0.9/lib
prepend-path LD_LIBRARY_PATH /opt/gnu/gdb/bin
</file>

<file name="/opt/modulefiles/compilers/gnu/.version.4.6.1">
#%Module1.0
set ModulesVersion "4.6.1"
</file>


</post>

</kickstart>
